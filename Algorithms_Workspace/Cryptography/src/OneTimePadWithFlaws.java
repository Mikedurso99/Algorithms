
public class OneTimePadWithFlaws {

	public static void main(String[] args){
		String keystream = "31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989";
		char Alphabet[] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
		String letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		String cipherText = "EZVPVEDSZZTCVCVUDNVLOWNZKWCJKJXCFKCFJGFTAGTOTTTUHKUPQUJJZKCHWLWYLAATHLDBECPEZSMRBRJEFZNVTNSGIOBASXYAQXGRNHMKQUQVHMFOFZJWKCOLHAVWTLBVGXUIERRLGQFNVNJJHIFBRBCVKATCCDNMUWDYLUDFRIJCJWOUPTXJYAWAKKPXRHZRQKAXNKEPJTVJSLXFTHJZNWTGARNGFIYZEOQZGQGRHRQNSTJFMHSVXCXRACZOOPUSUKRTURYXNCTMBOSNBPNPQADRXJUVHWEPNAFIGLCEGZOQJODXSTFNLPGYEDRPWMZPMVUPIPEQDHGCMANGZVZCIYEHZYYDRWFHCBBPAUCTTHLIEBIDUSTMHZKRPXTLZFGGJCKGKGZJMT";
		int offset = 77 ; // Can be 0-100 according to problem answer is 77
		
		//ciphervalue - key value % 26 = plaintext value
		
		int count = 0;
		
		for (int x=0; x < cipherText.length(); x++) {
			char holder = cipherText.charAt(x);
			int cipherVal = letters.indexOf(holder);
			String keyValTemp = keystream.substring(offset, offset + 2);
			int keyVal = Integer.parseInt(keyValTemp);
			offset += 2;
			
			
			int plaintxtVal = ((cipherVal - keyVal) % 26);
			if (plaintxtVal >= 0)
				plaintxtVal = plaintxtVal + 0;
			else
				plaintxtVal = plaintxtVal + 26;
			
			
			count++;
			//uncomment these for full debug
//			System.out.print("Count: " + count + " ");
//			System.out.print("Cipher Val: " + cipherVal + " ");
//			System.out.print("Key Val: " + keyVal + " ");
//			System.out.print("Plain Text Val: " + plaintxtVal + " ");
//			System.out.println("Plain Letters: " + letters.charAt(plaintxtVal));
			
			// use this to get full plain text
			System.out.print(letters.charAt(plaintxtVal));
		}		
	}
}

